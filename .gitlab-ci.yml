stages:
  - build
  - test
  - release

variables:
    VERSION: 1.0.${CI_PIPELINE_ID}

include:
  - template: Security/SAST.gitlab-ci.yml

build-code-job:
    stage: build
    script:
      - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt  # сохранение номера задачи в файл, чтобы в дальнейшем использовать для копирования артефакта  
      - cd backend 
      - mvn package -Dversion.application=${VERSION} # запуск сборки кода
      - cd ../frontend
      - npm install # загрузка всех сторонних зависимости
      - npm run build # запуск сборки кода
      - cd ..
      - mkdir sausage-store-${VERSION} # создание директории, в которую копируются артефакты. Это нужно для организации удобной структуры архива
      - mv backend/target/sausage-store-${VERSION}.jar sausage-store-${VERSION}/sausage-store-${VERSION}.jar # копирование собранного бэкенда
      - mv frontend/dist/frontend sausage-store-${VERSION}/public_html # копирование собранного фронтэнда
    artifacts:
      paths:
        - sausage-store-${VERSION}/public_html # сохранение собранного фронтэнда как артефакт
        - sausage-store-${VERSION}/sausage-store-${VERSION}.jar # сохранение собранного бэкенда как артефакт
      reports:
        dotenv: CI_JOB_ID.txt # сохранение файла с переменными как артефакт

upload-release:
    stage: release
    only:
        changes:
          - backend/**/*
          - frontend/**/*
    script: 
      - cd backend
      - mvn -s settings.xml deploy -DskipTests -Dversion.application=${VERSION}
      - cd ..
      - tar czvf sausage-store-${VERSION}.tar.gz sausage-store-${VERSION}/public_html
      - >
        curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
        --upload-file sausage-store-${VERSION}.tar.gz
        ${NEXUS_REPO_URL}/sausage-store-frontend-burunov-m/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz

sonarqube-check-frontend:
    stage: test
    image:
      name: sonarsource/sonar-scanner-cli:latest
      entrypoint: [""]
    variables:
      SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
      GIT_DEPTH: "0"
    cache:
      key: "${CI_JOB_NAME}"
      paths:
        - .sonar/cache
    script:
      - echo "SonarQube test frontend for ${CI_PROJECT_DIR}"
      - sonar-scanner
        -Dsonar.qualitygate.wait=true
        -Dsonar.projectKey=${SONAR_PROJECTKEY_BACKEND}
        -Dsonar.sources=.
        -Dsonar.host.url=${SONAR_HOST_URL}
        -Dsonar.login=${SONAR_LOGIN}
        -Dsonar.projectBaseDir="${CI_PROJECT_DIR}"/frontend
    allow_failure: true
    only:
      - merge_requests
      - master
      - develop
    when: manual

sonarqube-check-backend:
    stage: test
    image:
      name: sonarsource/sonar-scanner-cli:latest
      entrypoint: [""]
    variables:
      SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
      GIT_DEPTH: "0"
    cache:
      key: "${CI_JOB_NAME}"
      paths:
        - .sonar/cache
    script:
      - echo "SonarQube test backend for ${CI_PROJECT_DIR}"
      - sonar-scanner
        -Dsonar.qualitygate.wait=true
        -Dsonar.projectKey=${SONAR_PROJECTKEY_BACKEND}
        -Dsonar.sources=.
        -Dsonar.host.url=${SONAR_HOST_URL}
        -Dsonar.login=${SONAR_LOGIN}
        -Dsonar.projectBaseDir="${CI_PROJECT_DIR}"/backend
        -Dsonar.java.binaries=**/*
        -Dsonar.language=java
    allow_failure: true
    only:
      - merge_requests
      - master
      - develop
    when: manual

notify-release:
    stage: release
    only:
        changes:
          - backend/**/*
          - frontend/**/*
    script:
      - echo "Send message in Slack"
      - >
        curl -X POST -H 'Content-type: application/json' --data '{"text":
        "Вышла новая версия сосисочной - '"${VERSION}"'.
        Скачать фронт можно по ссылке - 
        '"${NEXUS_REPO_URL}"'/sausage-store-frontend-burunov-m/sausage-store/'"${VERSION}"'/sausage-store-'"${VERSION}"'.tar.gz.
        Скачать бэкенд можно по ссылке -
        '"${NEXUS_REPO_URL}"'/sausage-store-backend-burunov-m/com/yandex/practicum/devops/sausage-store/'"${VERSION}"'/sausage-store-'"${VERSION}"'.jar"}' 
        https://hooks.slack.com/services/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
